<?xml version="1.0" encoding='windows-1252' ?>
<xsl:stylesheet version="1.0" 
    xmlns:wgo='http://webgeno.sourceforge.net/course' 
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:import href="exslt/date.format-date.template.xsl" />
    <xsl:param name="pageId" />
    <xsl:param name="siteName" />
    <xsl:param name="siteTitle" />
    <xsl:param name="siteAuthor" />
    <xsl:param name="siteAuthorEmail" />
    <xsl:param name="siteDomain" />
    <xsl:param name="showSfLogo" />
    <xsl:key name='lessonIdMatch' match='//lesson' use='@id' />

    <xsl:output method="xml" indent="yes" encoding="windows-1252" omit-xml-declaration="yes" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN" />
    <xsl:template match="exam">
        <html>
            <head>
                <title><xsl:value-of select='$siteName' />: Promotion Exam</title>
                <link rel="stylesheet" type="text/css" href="test.css" ></link>
            </head>
            <body>
                <div id="header">
                  <div id="title">Promotion Exam: <xsl:value-of select='$siteTitle' /></div>
                  <div class="clearclass"></div> 
                  <!--
                  <h2>Teacher: Dan Wheadon</h2>
                  <div class="clearclass"></div> 
                  -->
                </div> 
                <xsl:apply-templates />
                <div id="footer">
                    <p id="legal">
                        Generated by <a href='http://webgeno.sourceforge.net'>testgeno</a> | 
                        ©2013 Content by <a><xsl:attribute name='href'>mailto:<xsl:value-of select='$siteAuthorEmail' /></xsl:attribute><xsl:value-of select='$siteAuthor' /></a><br />
                    </p>
                </div>
            </body>
        </html>
    </xsl:template>
    <xsl:template match="objective">
      <div class="SECTION">
        <xsl:apply-templates />
      </div>
    </xsl:template>
    <xsl:template match="statement">
      <p>Objective: <xsl:apply-templates /></p>
    </xsl:template>
    <xsl:template match="image">
        <img>
            <xsl:attribute name="src"><xsl:value-of select="@src" /></xsl:attribute>
            <xsl:attribute name="class"><xsl:value-of select="@class" /></xsl:attribute>
            <xsl:if test="@size = 'full_width'">
                <xsl:attribute name='class'>FULL-WIDTH</xsl:attribute>
            </xsl:if>
            <xsl:apply-templates />
        </img>
    </xsl:template>
    <xsl:template match='b'>
        <B>
            <xsl:apply-templates />
        </B>
    </xsl:template>
    <xsl:template match='i'>
        <I>
            <xsl:apply-templates />
        </I>
    </xsl:template>
    <xsl:template match="paragraph">
        <p>
            <xsl:apply-templates />
        </p>
    </xsl:template>
    <xsl:template match='list'>
        <ul>
            <xsl:apply-templates />
            <xsl:text> </xsl:text>
        </ul>
    </xsl:template>
    <xsl:template match='nlist'>
        <ol>
            <xsl:apply-templates />
            <xsl:text> </xsl:text>
        </ol>
    </xsl:template>
    <xsl:template match='list_item'>
        <li>
          <xsl:if test="local-name(..) = 'nlist'">
            <xsl:attribute name='class'>number</xsl:attribute>
          </xsl:if>
          <xsl:if test="local-name(..) = 'list'">
            <xsl:attribute name='class'>bullet</xsl:attribute>
          </xsl:if>
            <xsl:apply-templates />
            <xsl:text> </xsl:text>
        </li>
    </xsl:template>
    <xsl:template match='test'>
      <xsl:apply-templates />
    </xsl:template>
    <xsl:template match='problem'>
      <div class="problem">
        <xsl:apply-templates />
      </div>
    </xsl:template>
    <xsl:template match='prompt'>
      <xsl:choose>
        <xsl:when test='@inline'>
          <div class='promptinline'>
            <xsl:apply-templates />
            <xsl:apply-templates mode='prompt' select='ancestor::*/response'>
              <!-- This doesn't work for the problems that are in tables -->
              <xsl:with-param name='part'><xsl:number select='ancestor::*/problem/*' count='prompt' level='any' /></xsl:with-param>
              <!--
              <xsl:with-param name='part'><xsl:number /></xsl:with-param>
              -->
            </xsl:apply-templates>
          </div>
        </xsl:when>
        <xsl:otherwise>
          <div class='prompt'>
            <xsl:apply-templates />
            <xsl:apply-templates mode='prompt' select='ancestor::*/response'>
              <xsl:with-param name='part'><xsl:number select='ancestor::*/problem/*' count='prompt' level='any' /></xsl:with-param>
            </xsl:apply-templates>
          </div>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:template>
    <xsl:template match='response' mode='prompt'>
      <xsl:param name="part" />
      <xsl:choose>
        <xsl:when test="@type = 'radio'">
          <div class='response'>
            <xsl:for-each select='option'>
              <!-- todo: replace the name attribute with the objective id -->
              <input type='radio'>
                <xsl:attribute name='id'>part<xsl:value-of select='$part' />_<xsl:value-of select='position()' /></xsl:attribute>
                <xsl:attribute name='name'>part<xsl:value-of select='$part' />_1</xsl:attribute>
                <xsl:attribute name='value'><xsl:value-of select='position()' /></xsl:attribute>
                <xsl:apply-templates />
              </input><br />
            </xsl:for-each>
          </div>
        </xsl:when>
        <xsl:when test="@type = 'checkbox'">
          <div class='response'>
            <!-- For choosing several options -->
            <xsl:for-each select='option'>
              <!-- todo: replace the name attribute with the objective id -->
              <input type='hidden' value='0'>
                <xsl:attribute name='name'>part<xsl:value-of select='$part' />_<xsl:value-of select='position()' /></xsl:attribute>
              </input>
              <input type='checkbox' value='1'>
                <xsl:attribute name='id'>part<xsl:value-of select='$part' />_<xsl:value-of select='position()' /></xsl:attribute>
                <xsl:attribute name='name'>part<xsl:value-of select='$part' />_<xsl:value-of select='position()' /></xsl:attribute>
                <xsl:apply-templates />
              </input><br />
            </xsl:for-each>
          </div>
        </xsl:when>
        <xsl:when test="@type = 'open'">
          <div class='openresponse'>
            <input type='text'>
              <xsl:attribute name='id'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <xsl:attribute name='name'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <xsl:attribute name='size'><xsl:value-of select='@size' /></xsl:attribute>
              <xsl:apply-templates />
            </input>
          </div>
        </xsl:when>
        <xsl:when test="@type = 'number'">
          <div class='openresponse'>
            <input type='number'>
              <xsl:attribute name='id'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <xsl:attribute name='name'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <xsl:attribute name='size'><xsl:value-of select='@size' /></xsl:attribute>
              <xsl:apply-templates />
            </input>
          </div>
        </xsl:when>
        <xsl:otherwise>
          <!-- Make a list response by default -->
          <div class='listresponse'>
            <select>
              <xsl:attribute name='id'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <xsl:attribute name='name'>part<xsl:value-of select='$part' />_1</xsl:attribute>
              <option value='none'></option>
              <xsl:for-each select='option'>
                <!-- todo: replace the name attribute with the problem id -->
                <option>
                  <xsl:attribute name='name'><xsl:value-of select='../../@id' /></xsl:attribute>
                  <xsl:attribute name='value'><xsl:value-of select='position()' /></xsl:attribute>
                  <xsl:apply-templates />
                </option>
              </xsl:for-each>
            </select>
          </div>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:template>
    <xsl:template match='response'>
      <!-- Only show responses when prompt-ed -->
    </xsl:template>
    <xsl:template match="code">
      <div class='codewrapper'>
        <pre class="CODE">
          <xsl:apply-templates />
        </pre>
        <div class='codeclear'> </div>
      </div>
    </xsl:template>
    <xsl:template match="new_code">
        <div class="NEW-CODE">
            <xsl:apply-templates />
        </div>
    </xsl:template>
    <xsl:template match="ln">
      <span class="linenum"><xsl:apply-templates /></span>
    </xsl:template>
    <xsl:template match='demo'>
      <div class='demowrapper'>
        <div class='demo'>
          <xsl:copy-of select='node()' />
        </div>
        <div class='democlear'> </div>
      </div>
    </xsl:template>
    <xsl:template match='table'>
      <table>
        <xsl:apply-templates />
      </table>
    </xsl:template>
    <xsl:template match='tr'>
      <tr>
        <xsl:apply-templates />
      </tr>
    </xsl:template>
    <xsl:template match='th'>
      <th>
        <xsl:apply-templates />
      </th>
    </xsl:template>
    <xsl:template match='td'>
      <td>
        <xsl:if test='@class'>
          <xsl:attribute name='class'><xsl:value-of select='@class' /></xsl:attribute>
        </xsl:if>
        <xsl:apply-templates />
      </td>
    </xsl:template>
    <xsl:template match="answer">
    </xsl:template>
    <xsl:template match="em">
      <span class="EMPHASIZE">
        <xsl:apply-templates />
      </span>
    </xsl:template>
    <xsl:template match="note">
      <xsl:apply-templates />
    </xsl:template>
</xsl:stylesheet>
